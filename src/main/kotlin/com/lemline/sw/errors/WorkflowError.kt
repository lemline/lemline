package com.lemline.sw.errors

import com.fasterxml.jackson.annotation.JsonCreator
import com.fasterxml.jackson.annotation.JsonIgnore
import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.annotation.JsonPropertyOrder

/**
 * Represents an error that occurs during the execution of a workflow.
 *
 * @param errorType Error's type
 * @param status The status code generated by the origin for this occurrence of the error.
 * @param position A JSON Pointer used to reference the component the error originates from.
 * @param title A short, human-readable summary of the error or a runtime expression
 * @param details A human-readable explanation specific to this occurrence of the error or a runtime expression
 *
 * cf. https://github.com/serverlessworkflow/specification/blob/main/dsl-reference.md#error
 */
@JsonPropertyOrder("type", "status", "position", "title", "detail")
data class WorkflowError(
    @JsonIgnore
    val errorType: WorkflowErrorType,
    val status: Int,
    val position: String? = null,
    val title: String? = null,
    val details: String? = null,
) {
    val type = "$URI_BASE/${errorType.type}"

    @JsonCreator  // Use this constructor for deserialization
    constructor(
        @JsonProperty("type") type: String,
        @JsonProperty("status") status: Int? = null,
        @JsonProperty("position") instance: String? = null,
        @JsonProperty("title") title: String? = null,
        @JsonProperty("detail") detail: String? = null
    ) : this(
        errorType = WorkflowErrorType.entries.first { "$URI_BASE/${it.type}" == type },
        status = status ?: WorkflowErrorType.entries.first { "$URI_BASE/${it.type}" == type }.defaultStatus,
        position = instance,
        title = title,
        details = detail
    )

    companion object {
        private const val URI_BASE = "https://serverlessworkflow.io/spec/1.0.0/errors"
    }
}